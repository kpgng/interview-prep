Behavioural Questions

1. Conflict with a team member, how did you resolve it?
2. Made a mistake, how did you resolve it?
3. Big hurdle on a project, how did you overcome it?
4. A time you showed leadership?
5. What do you do if you're overworked & have too much to do?
6. How would you start working on a new project?
7. What are you trying to improve on?
8. Why Twitter?
9. What do you know about Twitter?
10. Why leaving?
11. Strengths
12. Weaknesses

1. Conflict with a team member, how did you resolve it?

Example 1: During a design review meeting for part of the project I 
was leading, there was lots of debate over how a certain part should 
be implemented. There was essentially 2 options & the team was split. 
I really thought my solution was good, but I didn't want to just 
discard their solution. So what I did was I created a small demo using 
each of the solutions & demonstrated them in a follow-up meeting. 
And it turns out, the optimal solution the entire team agreed upon was 
a combo of both solutions. So kind of the moral here was to always 
consider everyone's opinions & try things out if possible, because 
looking back now, this combined solution was definitely better than 
either solution individually.

Example 2: During another project I was on, which was previous to the 
main one I worked on, was a project that was already months overdue. 
And it really wasn't in the best state. So one day, with a meeting 
between PMs and devs, there was lots of back & forth with respect to 
meeting deadlines. People were starting to show some frustration, so 
what I did was start sharing my screen with the sprint board & talked 
about realistic & reasonable ways to de-scope the project. Because 
really I identified that there was no way we'd meet the deadline given 
the amount of bugs. So I went through & de-scoped. And the result of 
this was that the de-scoping was accepted & the deadline could be 
reasonably met again. Thinking back, say if the de-scoping wasn't 
accepted, then what I would've done was then escalate the situation 
to get a final decision, because that's one way to break deadlock.

2. Made a mistake, how did you resolve it?

Example 1: So 1 mistake I made during my main project here. So for 
this project, we intended to gate everything behind a feature flag. So 
we were trying out this new internal feature flag tool, to be able to 
gate everything behind it & not affect our customers. Well I made a 
mistake here in that something slipped through the cracks & I pushed 
a change that was unknowingly not behind the flag. And this caused 
Production to go down. So of course my action here was to fix this by 
first rolling back the latest deployment to the last stable version, 
identifying in which commit the broken code was pushed, & fix it to be 
behind the flag. So that ended up being good, & I took it a step 
further & wrote documentation on how to properly gate everything 
behind the flags, which is still being referenced today. So we 
actually came out better than before because we now have safeguards 
against this.

Example 2: Another mistake I made actually was during my internship at 
FLIR Systems. So there I worked on drones, & part of my job was to not 
only implement features, but also go out & fly it to verify my fixes. 
Well 1 time I started flying it & then completely lost control. The 
drone wasn't reacting to my inputs on the controller. So it crashed. 
Luckily only a wing was damaged & we have many replacements for that. 
But either way, my fix there was to definitely fix the implementation, 
but also more importantly document down what exactly happened & how 
it could be avoided. And again, we come out better in this situation 
because well accidents happen, & now we have lasting documentation 
that will help future engineers from making the same mistake.

3. Big hurdle on a project, how did you overcome it?

Example 1: So the project I worked on was a Help Center. So you can 
imagine on any website, I'd imagine Twitter has one too, is a Help 
Center type page where users can go & look for help for the website.
Well, the biggest hurdle on this project was fully implementing the 
search bar & being able to handle all edge cases. In particular, what 
was difficult was handling different languages & multiple locales. 
So to solve this, I had to consider & implement many things like 
sanitizing input for special characters & accents. Be able to handle 
multiple search queries & consider multiple words. Be able to ignore 
stop words, like typical connecting words ("and", "the", etc.). That 
was difficult too, particularly handling connecting words in other 
languages, because we can't read them. So it really took a lot of deep 
diving, but the result was a fully working search bar that met all 
of our requirements.

Example 2: I'd say another big hurdle I faced was during my first 
internship at Microsoft, this was my first real glimpse at production 
level software at a huge scale. Like having to work on features that 
have an outreach to millions of people was definitely jarring at 
first. The big hurdle here for me was even getting started in the 
first place. I was pretty intimidated by everything. So what I had to 
do for myself is seek help, early & quickly. I kind of took initiative 
& scheduled weekly meetings with my mentors for guidance. And this was 
kind of the action that really let me go. I was able to get more 
comfortable with things & ultimately be able to deliver my features.

4. A time you showed leadership?

Definitely I feel for myself a time I showed leadership was throughout 
my Help Center project, my most recent project here at Amazon. I 
definitely felt like I was in the driver's seat the whole time, from 
leading the majority of the project, writing & holding design review 
meetings, & constantly interacting with stakeholders, PMs, and QAs. I 
also carried out all the demos to showcase to everyone, & answered 
people's questions when they had any. I definitely felt leadership 
here especially when looking back, I made a lot of the calls on 
things, like certain implementations & design decisions. To the team's 
credit I was given lots of responsibility, I'd say because I interned 
here too the previous year so I earned their trust there, but still 
it was a lot to give me, & I felt like I embraced that & really 
enjoyed this project.

5. What do you do if you're overworked & have too much to do?

So for me, if there really is too much on my plate, I would do a few
things. First, I would prioritize in the short term & identify really 
the most important tasks. Then, I would try to delegate or negotiate 
with my manager to reduce this workload. 

6. How would you start working on a new project?

Well, first I would research & clearly understand all the problem 
requirements & components. Next, I would break it into logical 
modules or tasks & diagram out how they would connect. I actually do 
that now by taking responsibility for my sprint tasks, & breaking them 
down if necessary. Then, depending on the type of project, tackle 
tasks in a logical & orderly way.

7. What are you trying to improve on?

So for me, I'm definitely trying to improve on my breadth of skills.
So although I've been enjoying my time here & what I've been doing, I 
want to experience something else, something more. And I think a place 
like Twitter can provide something like that.

8. Why {COMPANY}?

Dependent on company. Mention scale, millions of users, cool product, 
want to try something new, interested in the field, etc.

9. What do you know about {COMPANY}?

Dependent on company. Look up what they do, what you're interested in.

10. Why leaving?

Again for me I'm really just looking to try something new. Like I feel 
like although the work is good, I really want to work on something, 
on a product I'm more passionate about. Because I think for me, the 
more passionate and into the product I am, the more I'll be motivated 
to work on that product & enjoy it. And {COMPANY} is definitely 
something cool & interesting to me.

11. Strengths

Deliver results, ownership, learn and be curious.

For me, the biggest strengths I received during my performance review 
was my ability to deliver results as well as have ownership over 
things. So the most recent project I just launched, I pretty much had 
full ownership over it, I answered any questions anybody had over 
certain things, spent the time to really learn everything about it 
to be able to answer questions. And then along with that, I was also, 
well most importantly, able to deliver on time. The project finished 
on schedule & with all planned features included. 

12. Weaknesses

Think big, dive deep, disagree and commit.

I'll say a growth area for myself is, well using what my team thought
from feedback & performance reviews, since we just had those, a growth
area for me is the ability to think big. What I mean by that is 
sometimes I get too caught up in the details, say with things like 
how to do things a certain way, code reviews taking longer than 
expected, etc. And this could be a problem when you're trying to move
fast with things & finishing things quickly. Basically I'm working 
towards trying to find a better balance between working fast & 
being careful & thoughtful with certain decisions. 
